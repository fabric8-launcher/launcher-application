kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: launcher-application
  annotations:
    openshift.io/display-name: Fabric8 Launcher - Backend
    description: This application contains the Backend service for the Launcher
    tags: instant-app,fabric8-launcher
    iconClass: icon-shadowman
    template.openshift.io/long-description: This application contains the Backend
      service
    template.openshift.io/provider-display-name: Red Hat, Inc.
    template.openshift.io/documentation-url: https://github.com/fabric8-launcher/launcher-application
    template.openshift.io/support-url: https://access.redhat.com
message: 'The following service has been created in your project: launcher-application.


  For more information about using this template, including OpenShift considerations,
  see https://github.com/fabric8-launcher'
labels:
  template: launcher-application
parameters:
- name: IMAGE
  value: fabric8/launcher-backend
  required: true
- name: IMAGE_TAG
  value: latest
  required: true
- description: CPU request
  displayName: CPU request
  required: true
  name: CPU_REQUEST
  value: 10m
- description: CPU limit
  displayName: CPU limit
  required: true
  name: CPU_LIMIT
  value: 1000m
- description: Memory request
  displayName: Memory request
  required: true
  name: MEMORY_REQUEST
  value: 768Mi
- description: Memory limit
  displayName: Memory limit
  required: true
  name: MEMORY_LIMIT
  value: 2G
objects:
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: launcher-application
    annotations:
      configmap.fabric8.io/update-on-change: launcher,launcher-clusters
  spec:
    replicas: 1
    selector:
      service: launcher-application
    strategy:
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          service: launcher-application
      spec:
        containers:
        - env:
          - name: LAUNCHER_BOOSTER_CATALOG_REPOSITORY
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.git.repository
          - name: LAUNCHER_BOOSTER_CATALOG_REF
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.git.ref
          - name: LAUNCHER_BOOSTER_CATALOG_FILTER
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.filter
                optional: true
          - name: LAUNCHER_BACKEND_CATALOG_REINDEX_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.catalog.reindex.token
                optional: true
          - name: LAUNCHER_BACKEND_DOCUMENTATION_RELOAD_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.documentation.reload.token
                optional: true
          - name: LAUNCHER_GIT_PROVIDER
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.git.provider
                optional: true
          - name: LAUNCHER_BACKEND_GIT_REPOSITORY_DESCRIPTION
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.git.repository.description
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_API_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.api.url
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.console.url
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_USERNAME
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.username
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_PASSWORD
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.password
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_TOKEN
            valueFrom:
              secretKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.token
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_IMPERSONATE_USER
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.impersonate.user
                optional: true
          - name: LAUNCHER_MISSIONCONTROL_GITHUB_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.missioncontrol.github.token
                optional: true
          - name: SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.sentry.dsn
                optional: true
          - name: LAUNCHER_KEYCLOAK_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.url
          - name: LAUNCHER_KEYCLOAK_REALM
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.realm
          - name: LAUNCHER_KEYCLOAK_CLIENT_ID
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.keycloak.client.id
                optional: true
          - name: LAUNCHER_TRACKER_SEGMENT_TOKEN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.tracker.segment.token
          - name: LAUNCHER_BACKEND_ENVIRONMENT
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.environment
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_CLUSTERS_FILE
            value: /etc/fabric8-launcher/openshift-clusters.yaml
          - name: LAUNCHER_GIT_PROVIDERS_FILE
            value: /etc/fabric8-launcher/git-providers.yaml
          - name: LAUNCHER_MISSIONCONTROL_OPENSHIFT_CLUSTERS_SUBSCRIPTION_TOKEN
            valueFrom:
              secretKeyRef:
                name: launcher
                key: launcher.missioncontrol.openshift.clusters.subscription.token
                optional: true
          - name: LAUNCHER_FILTER_RUNTIME
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.filter.runtime
                optional: true
          - name: LAUNCHER_FILTER_VERSION
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.filter.version
                optional: true
          - name: LAUNCHER_BACKEND_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.url
                optional: true
          - name: LAUNCHER_LAUNCH_ENABLED
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.launch.enabled
                optional: true
          - name: LAUNCHER_CREATOR_ENABLED
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.creator.enabled
                optional: true
          - name: LAUNCHER_CREATOR_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.creator.url
                optional: true
          - name: LAUNCHER_OAUTH_OPENSHIFT_URL
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.oauth.openshift.url
                optional: true
          - name: LAUNCHER_OAUTH_OPENSHIFT_CLIENT_ID
            valueFrom:
              secretKeyRef:
                name: launcher-oauth-openshift
                key: clientId
                optional: true
          - name: LAUNCHER_FRONTEND_SENTRY_DSN
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.frontend.sentry.dsn
                optional: true
          - name: LAUNCHER_TARGETENVIRONMENT_SKIP
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.frontend.targetenvironment.skip
                optional: true
          - name: WELCOME_IMAGE_NAME
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.welcome.image.name
                optional: true
          - name: WELCOME_IMAGE_TAG
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.welcome.image.tag
                optional: true
          - name: JAVA_OPTS
            valueFrom:
              configMapKeyRef:
                name: launcher
                key: launcher.backend.java.opts
                optional: true
          image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: launcher-application
          ports:
          - containerPort: 8080
            protocol: TCP
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /etc/fabric8-launcher/
            name: configmap-volume
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 15
            periodSeconds: 20
            timeoutSeconds: 10
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 20
            timeoutSeconds: 10
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        serviceAccountName: dsaas-deploy
        volumes:
        - name: configmap-volume
          configMap:
            name: launcher-clusters
    test: false
    triggers:
    - type: ConfigChange
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      service: launcher-application
    name: launcher-application
  spec:
    ports:
    - name: '8080'
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      service: launcher-application
    sessionAffinity: None
    type: ClusterIP
